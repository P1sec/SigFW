{
	"operator_configuration": {

		"Home_IMSI_prefixes_comment": "# Identification Home IMSI range for HPLMN network, used to identify home subscribers",
		"Home_IMSI_prefixes": [
			"111111"
		],
		"Home_Diameter_Realm_list_comment": "Operator Diameter Internal Realm list, used to identify incoming and outgoing traffic of HPLMN",
		"Home_Diameter_Realm_list": [
			"exchange.example.org"
		]
	},
	"sigfw_configuration": {
		"sctp": {
			"sctp_management_name": "sctp_mgmt",
			"sctp_server": [
				{
					"server_name": "sctp_server",
					"host_address": "127.0.0.1",
					"port": "3869"
				}
			],
			"sctp_server_association": [
				{
					"peer_address": "127.0.0.1",
					"peer_port": "13868",
					"server_name": "sctp_server",
					"assoc_name": "sctp_from_client_to_firewall"
				}
			],
			"sctp_association": [
				{
					"host_address": "127.0.0.1",
					"host_port": "13869",
					"peer_address": "127.0.0.1",
					"peer_port": "3868",
					"assoc_name": "sctp_from_firewall_to_server"
				}
			]
		},		
		"firewall_rules": {
			"firewall_rules_comment": "# Firewall filtering rules configuration",
			
			"firewall_policy_comment": "# Allowed value is one from: DROP_SILENTLY, DROP_WITH_DIAMETER_ERROR, DNAT_TO_HONEYPOT, ALLOW",
			"firewall_policy": "DNAT_TO_HONEYPOT",
				
			"diameter": {
				"origin_realm_blacklist": [
					"blacklisted.example.org"
				],
				"application_id_whitelist": [
					"0",
					"16777251"
				],
				"command_code_blacklist": [
					"8388620",
					"8388622"
				],
				"cat2_command_code_blacklist": [
					"317",
					"319",
					"329"
				]
			},
			
			"lua": {
				"lua_comment": "# LUA Blacklist firewall rules. Currently supported LUA variables are: diameter_orig_host, diameter_orig_realm, diameter_dest_host, diameter_dest_realm, diameter_cc, diameter_ai, diameter_imsi, diameter_msisdn",
				"blacklist_rules": [
					"diameter_orig_realm == 'exchangeClient.example.org'",
					"diameter_orig_realm == 'exchangeClientB.example.org'"
				]
			},
			
			"ids": {
				"ids_comment": "# IDS API. After evaluating internal firewall rules, the external IDS system can be used to check message (e.g. Cat3). If not required remove this ids json block from config.",
				
				"ids_api_type_comment": "# Type of connector. Currently supported only REST",
				"ids_api_type": "REST",
				"ids_servers": [
					{
						"host": "https://localhost:8443/diameterfw_api/1.0/eval_diameter_message_in_ids",
						"username": "user",
						"password": "password"
					}
				]
			},
			
			"mthreat": {
				"mthreat_comment": "# mThreat API. If the message matches internal firewall or IDS rules, then the firewall can report the event in anonymized way to mThreat. If not required remove this mthreat json block from config.",
			
				"mthreat_api_type_comment": "# Type of connector. Currently supported only REST",
				"mthreat_api_type": "REST",
				"mthreat_salt_comment": "# Change the salt value for unique anonymization",
				"mthreat_salt": "XVm4AoKrkicsgEcx",
				"mthreat_servers": [
					{
						"host": "https://127.0.0.1:8444/mthreat_api/1.0/send_diameter_alert_to_mthreat",
						"username": "user",
						"password": "pass"
					}
				]
			},
			
			"honeypot": {
				"honeypot_comment": "# Honeypot configuration. Only used if firewall policy is DNAT_TO_HONEYPOT",
			
				"diameter_host_comment": "# The firewall after detecting the message will perform DNAT to the following Diameter address.",
				"diameter_host": "127.0.0.1",
				"diameter_realm": "honeypot.example.org",
				
				"dnat_session_expiration_timeout_comment": "# After matching the firewall or IDS rules, the firewall will apply DNAT for Diameter address for the defined number of seconds",
				"dnat_session_expiration_timeout": "30"
			}
		},
		"encryption_rules": {
			"destination_realm_encryption": [
			],
			"destination_realm_decryption": [
				{
					"destination_realm": "exchange.example.org",
					"public_key": "MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCm/PAsXOj7cjirJsQsiIeHauFNLwBIuM1brkUm3aVXeraDIeJ2BWXmWlKMmX/FRZh4Qhe9mUy6YgwTO8PndWdMDRWMw8vvXJFI7HPJpsNfcBykefSqhr5X4h6HyQr73V8O0U5PtgCBuVoyuOFIj87WFwaLuajHiQgps7NOloeH1wIDAQAB",
					"private_key": "MIICdgIBADANBgkqhkiG9w0BAQEFAASCAmAwggJcAgEAAoGBAKb88Cxc6PtyOKsmxCyIh4dq4U0vAEi4zVuuRSbdpVd6toMh4nYFZeZaUoyZf8VFmHhCF72ZTLpiDBM7w+d1Z0wNFYzDy+9ckUjsc8mmw19wHKR59KqGvlfiHofJCvvdXw7RTk+2AIG5WjK44UiPztYXBou5qMeJCCmzs06Wh4fXAgMBAAECgYBwNrkOlsDZd8AtAzgA1R5+GYydWWBPfiBB47IElB1v076iEDsmJCp9yWR/pwb9ge8boQ5jEolFFm4W3qqe934ZvBkJaL38zqI3rjZJJ7c9uJwr3ldmREFZa5U8l9tnvlck1b9QW0KDvjt+1Q547+eFlgQaqY5QfY+9D3rpdkZYwQJBAO/2PyNrYlHmVGZOt6foJLv3w4uMkTuleVH9Qu9TOQiv5wyCPTmMDMzW3AwPlFNaZI6YqqYYPUpyI1T0vWVpfS0CQQCyJhtwb5Xxg+b9NGuGmMqJ9GVzYwDPufhMDp7CDDaRKwV3q7eOtsasEGZX64ZkuVRL9xssKLunoqiT5c9z5aOTAkEApf060692hZzEiTiuhjFpJ7VNyPxlglMGxxZf9NkmvMGhG+ADpgkg2ZlPAfDM85O1t4YXlWlzDEpD8oKReNMtyQJAQZN9bjnk++4NzQ7KtdTwWS+5WGwNFGnkWDrZfZx5SZ6IeLCg9Mua/iNbSOnNoq4FtaDUQ8EKsn5Rh3+EiajyOQJAB/dZABQVKyvDAN4s3rXWsrGSuMzGoNCBf1Min1cnWhW2ndE7XC9szNsDGn7sCXmpjwdb7SA6iuh7yrH0YAiOgQ=="
				}
			],
			"autodiscovery": "true"
		},
		"signature_rules": {
			"origin_realm_verify": [
				{
					"origin_realm": "exchange.example.org",
					"public_key": "MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCm/PAsXOj7cjirJsQsiIeHauFNLwBIuM1brkUm3aVXeraDIeJ2BWXmWlKMmX/FRZh4Qhe9mUy6YgwTO8PndWdMDRWMw8vvXJFI7HPJpsNfcBykefSqhr5X4h6HyQr73V8O0U5PtgCBuVoyuOFIj87WFwaLuajHiQgps7NOloeH1wIDAQAB"
				}
			],
			"origin_realm_signing": [
			]
		}
	}
}
