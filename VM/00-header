#!/bin/sh
#
#    00-header - create the header of the MOTD
#    Copyright (C) 2009-2010 Canonical Ltd.
#
#    Authors: Dustin Kirkland <kirkland@canonical.com>
#
#    This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License along
#    with this program; if not, write to the Free Software Foundation, Inc.,
#    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

[ -r /etc/lsb-release ] && . /etc/lsb-release

if [ -z "$DISTRIB_DESCRIPTION" ] && [ -x /usr/bin/lsb_release ]; then
	# Fall back to using the very slow lsb_release utility
	DISTRIB_DESCRIPTION=$(lsb_release -s -d)
fi

#printf "Welcome to %s (%s %s %s)\n" "$DISTRIB_DESCRIPTION" "$(uname -o)" "$(uname -r)" "$(uname -m)"

printf "SigFW\n"
printf "Open Source SS7/Diameter firewall\n"
printf "Original work was created by Martin Kacer, Philippe Langlois\n"
printf "Copyright 2017, P1 Security S.A.S and individual contributors\n"
printf "See the AUTHORS in the distribution for a full listing of individual contributors.\n"
printf "\n"
printf "SigFW is licensed under dual license policy. The default license is\n"
printf "the Free Open Source GNU Affero GPL v3.0.\n"
printf "\n"
printf "\n"
printf "Interfaces:\n"
printf "   enp0s3 - management (SSH, Web)\n"
printf "   enp0s8 - signalling (SigFW could be reconfigured here)\n"
printf "   enp0s9 - passive signalling (port-mirrored traffic)\n"
printf "\n"
printf "To access Kibana:\n"
printf "   http://<host>:5601/\n"
printf "\n"
printf "To access API\n"
printf "   https://<host>:8443/ss7fw_api/1.0/get_status\n"
printf "\n"
printf "To check if services are running:\n"
printf "   sudo service tshark_to_ss7fw status\n"
printf "   sudo service tshark_to_ek status\n"
printf "   sudo service ss7fw status\n"
printf "   sudo service ss7server status\n"
printf "   sudo service ss7client status\n"
printf "\n"
printf "To replay the pcap on passive interface:\n"
printf "   sudo tcpreplay  --intf1=enp0s9 sigtran.pcap\n"
printf "\n"
printf "Description:\n"
printf "   By default only SS7FW is enabled. The SS7FW is in passive mode.\n"
printf "   DiameterFW code is present but configured as service system service.\n"
printf "   Tshark is capturing traffic on enp0s9 and pushing into ElasticSearch.\n"
printf "   Second instance of tshark is pushing capture into named pipe of SS7FW.\n"
printf "   The SS7FW consist of ss7client, ss7firewall, ss7server. ss7client replay\n"
printf "   the captured traffic from enp0s9 towards ss7firewall and ss7server on\n"
printf "   localhost.\n"
printf "\n"
printf "   SS7FW and DiameterFW are located in /opt/SigFW/sigfw/\n"
printf "\n"
printf "   Before first run or if the IP has changed, modify /etc/kibana/kibana.yml"
printf "\n"
printf "\n"
printf "To access logs:\n"
printf "   tail -f /opt/SigFW/sigfw/sigfw.sigfw/sigfw.log\n"
